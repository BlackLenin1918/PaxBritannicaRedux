ai_land_doctrine_tier_1_trigger = {
	OR = {
		has_tech = elastic_defence
		has_tech = mobile_defence
		has_tech = grand_assault
		has_tech = defence_in_depth
	}
}

ai_land_doctrine_tier_2_trigger = {
	OR = {
		has_tech = kampfgruppe
		has_tech = mechanised_offensive
		has_tech = branch_interoperation
		has_tech = infiltration_assault
		has_tech = vast_offensives
		has_tech = large_front_offensive
	}
}

ai_air_doctrine_tier_1_trigger = {
	OR = {
		has_tech = naval_strike_tactics
		has_tech = direct_ground_support
		has_tech = low_echelon_support
	}
}

ai_air_doctrine_tier_2_trigger = {
	OR = {
		has_tech = multialtitude_flying
		has_tech = hunt_and_destroy
		has_tech = operational_destruction
	}
}
ai_air_doctrine_tier_3_trigger = {
	OR = {
		has_tech = flying_fortress
		has_tech = naval_strike_torpedo_tactics
		has_tech = infiltration_bombing
	}
}

anti_submarine_strategy_required_trigger = {
	OR = {
		AND = {
			has_war = yes
			any_enemy_country = {
				has_navy_size = {
					type = submarine
					size > 30
				}
			}
		}
		convoy_threat > 0.3
	}
}


can_unlock_new_special_forces_tree = {
	if = {
		limit = { NOT = { has_variable = sf_trees } }
		custom_trigger_tooltip = {
			tooltip = can_unlock_new_special_forces_tree_none
			NOT = { has_variable = sf_trees }
		}
	}
	else_if = {
		limit = { check_variable = { sf_trees > 0 } }
		custom_trigger_tooltip = {
			tooltip = can_unlock_new_special_forces_tree_more_yes
			check_variable = { sf_trees > 0 }
		}
	}
	else = {
		custom_trigger_tooltip = {
			tooltip = can_unlock_new_special_forces_tree_more_no
			always = no
		}
	}
}


mio_original_country_exists_and_not_at_war_with_ROOT = { #Used for MIO decisions visibility - THIS is original country
	exists = yes
	has_capitulated = no
	NOT = { has_war_with = ROOT }
}

mio_original_country_available_with_opinion_subject_and_war_requirements_fulfilled = { #Used for MIO decisions availability - THIS is original country
	has_opinion = {
		target = ROOT
		value > 49
	}
	OR = {
		is_subject = no
		is_subject_of = ROOT
	}
	has_capitulated = no
	NOT = { has_war_with = ROOT }
}